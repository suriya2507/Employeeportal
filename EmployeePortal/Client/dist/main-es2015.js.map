{"version":3,"sources":["./src/app/app.component.html","./src/app/counter/counter.component.html","./src/app/fetch-data/fetch-data.component.html","./src/app/form/form.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/register/register.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/authenticationInterceptor.ts","./src/app/counter/counter.component.ts","./src/app/customvalidators/must-match.validator.ts","./src/app/fetch-data/fetch-data.component.ts","./src/app/form/form.component.ts","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/materialModule.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/app/register/register.component.ts","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\\\" integrity=\\\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\\\" crossorigin=\\\"anonymous\\\">\\n<body>\\n  <app-nav-menu></app-nav-menu>\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</body>\\n\"","export default \"<h1>Counter</h1>\\n\\n<p>This is a simple example of an Angular component.</p>\\n\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\n\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\n\"","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\n\\n<p>This component demonstrates fetching data from the server.</p>\\n\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\n\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\n  <thead>\\n    <tr>\\n      <th>Date</th>\\n      <th>Temp. (C)</th>\\n      <th>Temp. (F)</th>\\n      <th>Summary</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\n      <td>{{ forecast.date }}</td>\\n      <td>{{ forecast.temperatureC }}</td>\\n      <td>{{ forecast.temperatureF }}</td>\\n      <td>{{ forecast.summary }}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","export default \"\\n<h1>Form</h1>\\n\\n<!--<p aria-live=\\\"polite\\\" >{{response.message}}</p>-->\\n<div class=\\\"card m-3\\\">\\n  <h5 class=\\\"card-header\\\">Angular 10 Reactive Form Validation</h5>\\n  \\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col\\\">\\n          <label>Title</label>\\n          <!-- <select formControlName=\\\"title\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\">-->\\n          <select formControlName=\\\"title\\\" class=\\\"form-control\\\">\\n            <option value=\\\"\\\"></option>\\n            <option value=\\\"Mr\\\">Mr</option>\\n            <option value=\\\"Mrs\\\">Mrs</option>\\n            <option value=\\\"Miss\\\">Miss</option>\\n            <option value=\\\"Ms\\\">Ms</option>\\n          </select>\\n          <!--<div *ngIf=\\\"submitted && f.title.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.title.errors.required\\\">Title is required</div>\\n          </div>-->\\n        </div>\\n        <div class=\\\"form-group col-5\\\">\\n          <label>First Name</label>\\n          <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-5\\\">\\n          <label>Last Name</label>\\n          <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col\\\">\\n          <label>Date of Birth</label>\\n          <input type=\\\"date\\\" formControlName=\\\"dob\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.dob.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.dob.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.dob.errors.required\\\">Date of Birth is required</div>\\n            <div *ngIf=\\\"f.dob.errors.pattern\\\">Date of Birth must be a valid date in the format YYYY-MM-DD</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label>Email</label>\\n          <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n            <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col\\\">\\n          <label>Password</label>\\n          <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n            <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label>Confirm Password</label>\\n          <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\" />\\n          <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.confirmPassword.errors.required\\\">Confirm Password is required</div>\\n            <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">Passwords must match</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group form-check\\\">\\n        <input type=\\\"checkbox\\\" formControlName=\\\"acceptTerms\\\" id=\\\"acceptTerms\\\" class=\\\"form-check-input\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.acceptTerms.errors }\\\" />\\n        <label for=\\\"acceptTerms\\\" class=\\\"form-check-label\\\">Accept Terms & Conditions</label>\\n        <div *ngIf=\\\"submitted && f.acceptTerms.errors\\\" class=\\\"invalid-feedback\\\">Accept Ts & Cs is required</div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-primary mr-1\\\">Register</button>\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<h1>Hello, world!</h1>\\n<p>Welcome to your new single-page application, built with:</p>\\n<ul>\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\n</ul>\\n<p>To help you get started, we've also set up:</p>\\n<ul>\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\n</ul>\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\n\"","export default \"<div class=\\\"form\\\">\\n    <mat-card>\\n        <mat-card-header class=\\\"head\\\">\\n            <h1 class=\\\"login\\\">Login page</h1>\\n        </mat-card-header>\\n\\n        <br/>\\n        <br/>\\n\\n        <mat-card-content>\\n            <form\\n                    class=\\\"example-form\\\"\\n                    [formGroup]=\\\"loginForm\\\"\\n                    (ngSubmit)=\\\"onSubmit()\\\"\\n            >\\n                <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n                    <tr>\\n                        <td>\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <mat-label>\\n                                    <mat-icon>person</mat-icon>\\n                                    User name\\n                                </mat-label>\\n                                <input\\n                                        matInput\\n                                        type=\\\"text\\\"\\n                                        formControlName=\\\"userName\\\"\\n                                        class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.userName.errors }\\\"\\n                                />\\n                                <div\\n                                        *ngIf=\\\"submitted && f.userName.errors\\\"\\n                                        class=\\\"invalid-feedback\\\"\\n                                >\\n                                    <div *ngIf=\\\"f.userName.errors.required\\\">\\n                                        UserName is required\\n                                    </div>\\n                                </div>\\n                            </mat-form-field>\\n                        </td>\\n                    </tr>\\n                    <br/>\\n                    <tr>\\n                        <td>\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <mat-label>\\n                                    <mat-icon>lock</mat-icon>\\n                                    password\\n                                </mat-label>\\n                                <input\\n                                        matInput\\n                                        [type]=\\\"hide ? 'password' : 'text'\\\"\\n                                        formControlName=\\\"password\\\"\\n                                        class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n                                />\\n                                <div\\n                                        *ngIf=\\\"submitted && f.password.errors\\\"\\n                                        class=\\\"invalid-feedback\\\"\\n                                >\\n                                    <div *ngIf=\\\"f.password.errors.required\\\">\\n                                        Password is required\\n                                    </div>\\n                                    <div *ngIf=\\\"f.password.errors.minlength\\\">\\n                                        Password must be at least 6 characters\\n                                    </div>\\n                                </div>\\n\\n                                <button\\n                                        mat-icon-button\\n                                        matSuffix\\n                                        (click)=\\\"hide = !hide\\\"\\n                                        [attr.aria-label]=\\\"'Hide password'\\\"\\n                                        [attr.aria-pressed]=\\\"hide\\\"\\n                                >\\n                                    <mat-icon>{{\\n                                        hide ? \\\"visibility_off\\\" : \\\"visibility\\\"\\n                                        }}</mat-icon>\\n                                </button>\\n                            </mat-form-field>\\n                        </td>\\n                    </tr>\\n                </table>\\n            </form>\\n        </mat-card-content>\\n        <mat-card-actions class=\\\"button\\\">\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-primary mr-1\\\" (click)=\\\"onSubmit()\\\">\\n                Login\\n            </button>\\n            <button mat-raised-button\\n                    color=\\\"warn\\\"\\n                    class=\\\"btn btn-secondary\\\"\\n                    type=\\\"reset\\\"\\n                    (click)=\\\"onReset()\\\"\\n            >\\n                Cancel\\n            </button>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\\n\"","export default \"<header>\\n  <nav\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\n  >\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">EmployeePortal</a>\\n      <button\\n        class=\\\"navbar-toggler\\\"\\n        type=\\\"button\\\"\\n        data-toggle=\\\"collapse\\\"\\n        data-target=\\\".navbar-collapse\\\"\\n        aria-label=\\\"Toggle navigation\\\"\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\n        (click)=\\\"toggle()\\\"\\n      >\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\n      >\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</header>\\n\"","export default \"<h1>Counter</h1>\\n\\n<p>This is a simple example of an Angular component.</p>\\n\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\n\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {Router, RouterModule} from '@angular/router';\n\nimport {AppComponent} from './app.component';\nimport {NavMenuComponent} from './nav-menu/nav-menu.component';\nimport {HomeComponent} from './home/home.component';\nimport {CounterComponent} from './counter/counter.component';\nimport {FetchDataComponent} from './fetch-data/fetch-data.component';\nimport {RegisterComponent} from './register/register.component';\nimport {FormComponent} from './form/form.component';\nimport {LoginComponent} from './login/login.component';\nimport {MaterialModule} from './materialModule';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AuthenticationInterceptor} from './authenticationInterceptor';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavMenuComponent,\n        HomeComponent,\n        CounterComponent,\n        FetchDataComponent,\n        RegisterComponent,\n        FormComponent,\n        LoginComponent\n    ],\n    imports: [\n        BrowserModule.withServerTransition({appId: 'ng-cli-universal'}),\n        HttpClientModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        RouterModule.forRoot([\n            {path: '', component: HomeComponent, pathMatch: 'full'},\n            {path: 'register', component: FormComponent},\n            {path: 'login', component: LoginComponent},\n            {path: 'home', component: HomeComponent}\n        ]),\n        BrowserAnimationsModule\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useFactory: function (router: Router) {\n                return new AuthenticationInterceptor(router);\n            },\n            multi: true,\n            deps: [Router]\n        },\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {TOKEN_STORAGE_KEY} from './user.service';\nimport {catchError} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AuthenticationInterceptor implements HttpInterceptor {\n    constructor(private router: Router) {\n    }\n\n\n    handleUnauthorized(err: HttpErrorResponse): Observable<any> {\n        if (err.status === 401) {\n            localStorage.removeItem(TOKEN_STORAGE_KEY);\n            this.router.navigateByUrl('/home');\n            return of(err.message);\n        }\n\n        return throwError(err);\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        const token = localStorage.getItem(TOKEN_STORAGE_KEY);\n        if (token) {\n            const headers = req.headers.set('Authorization', `bearer ${token}`);\n            req = req.clone({\n                headers: headers\n            });\n        }\n\n        return next.handle(req).pipe(catchError(x => this.handleUnauthorized(x)));\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-counter-component',\n  templateUrl: './counter.component.html'\n})\nexport class CounterComponent {\n  public currentCount = 0;\n\n  public incrementCounter() {\n    this.currentCount++;\n  }\n}\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return;\n    }\n\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n})\nexport class FetchDataComponent {\n  public forecasts: WeatherForecast[];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n}\n\ninterface WeatherForecast {\n  date: string;\n  temperatureC: number;\n  temperatureF: number;\n  summary: string;\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n// import custom validator to validate that password and confirm password fields match\nimport { MustMatch } from '../customvalidators/must-match.validator';\nimport {UserService} from \"../user.service\";\nimport {Task} from \"protractor/built/taskScheduler\";\n\n@Component({\n  selector: 'form.component',\n  templateUrl: './form.component.html',\n})\n\n\nexport class FormComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  response;\n  public httpClient;\n  public bUrl;\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, private formBuild: FormBuilder, private userService: UserService)\n  {\n    this.httpClient = http;\n    this.bUrl = baseUrl;\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuild.group({\n      //title: ['', Validators.required],\n      title: ['', Validators.nullValidator],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      // validates date format yyyy-mm-dd\n      dob: ['', [Validators.required, Validators.pattern(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  async onSubmit() {\n\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    if(!window.sessionStorage.getItem(\"jwt_token\"))\n    {\n      let token =await this.userService.registerUser({Email: this.registerForm.value.email, Password: this.registerForm.value.password}).toPromise();\n      window.sessionStorage.setItem(\"jwt_token\", token.Token);       \n    }\n    \n    \n    // this.httpClient.post(this.bUrl + 'registration', this.registerForm.value).subscribe(result => {\n    //   this.response = result;\n    // }, error => console.error(error));  \n\n\n  }\n\n  onReset() {\n    this.submitted = false;\n    this.registerForm.reset();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","export default \".login {\\n  color: rgb(78, 127, 233);\\n  text-align: center;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 650px;\\n  width: 50%;\\n  padding-left: 28%;\\n}\\n\\n.example-full-width {\\n  width: 80%;\\n}\\n\\n.form {\\n  display: inline-block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  text-align: center;\\n  display: block;\\n  text-align: center;\\n  margin: center;\\n  width: 45%;\\n  -webkit-margin-start: auto;\\n          margin-inline-start: auto;\\n  align-items: center;\\n  padding-top: 7%;\\n  table-layout: auto;\\n\\n  background-image: initial;\\n  background-position-x: initial;\\n  background-position-y: initial;\\n  background-size: initial;\\n  background-attachment: initial;\\n  background-origin: initial;\\n  background-clip: initial;\\n}\\n\\n.head {\\n  padding-left: 30%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHdCQUF3QjtFQUN4QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsVUFBVTtFQUNWLDBCQUF5QjtVQUF6Qix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixrQkFBa0I7O0VBRWxCLHlCQUF5QjtFQUN6Qiw4QkFBOEI7RUFDOUIsOEJBQThCO0VBQzlCLHdCQUF3QjtFQUN4Qiw4QkFBOEI7RUFDOUIsMEJBQTBCO0VBQzFCLHdCQUF3QjtBQUMxQjs7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4ge1xuICBjb2xvcjogcmdiKDc4LCAxMjcsIDIzMyk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmV4YW1wbGUtZm9ybSB7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIG1heC13aWR0aDogNjUwcHg7XG4gIHdpZHRoOiA1MCU7XG4gIHBhZGRpbmctbGVmdDogMjglO1xufVxuXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDgwJTtcbn1cblxuLmZvcm0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiBjZW50ZXI7XG4gIHdpZHRoOiA0NSU7XG4gIG1hcmdpbi1pbmxpbmUtc3RhcnQ6IGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiA3JTtcbiAgdGFibGUtbGF5b3V0OiBhdXRvO1xuXG4gIGJhY2tncm91bmQtaW1hZ2U6IGluaXRpYWw7XG4gIGJhY2tncm91bmQtcG9zaXRpb24teDogaW5pdGlhbDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbi15OiBpbml0aWFsO1xuICBiYWNrZ3JvdW5kLXNpemU6IGluaXRpYWw7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogaW5pdGlhbDtcbiAgYmFja2dyb3VuZC1vcmlnaW46IGluaXRpYWw7XG4gIGJhY2tncm91bmQtY2xpcDogaW5pdGlhbDtcbn1cbi5oZWFkIHtcbiAgcGFkZGluZy1sZWZ0OiAzMCU7XG59XG4iXX0= */\"","import {Component, OnInit, Inject} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../user.service';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    submitted = false;\n    hide = true;\n\n\n    constructor(private formBuild: FormBuilder, private userService: UserService) {\n\n    }\n\n    ngOnInit() {\n        this.loginForm =\n\n            this.formBuild.group\n            ({\n                userName: ['', Validators.required],\n                password: ['', [Validators.required, Validators.minLength(6)]],\n            });\n    }\n\n    get f() {\n        return this.loginForm.controls;\n    }\n\n    async onSubmit() {\n        this.submitted = true;\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        await this.userService.login({login: this.loginForm.value.userName, password: this.loginForm.value.password});\n    }\n\n\n    onReset() {\n        this.submitted = false;\n        this.loginForm.reset();\n    }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatInputModule} from '@angular/material/input';\n\n@NgModule({\n    imports: [\n        MatFormFieldModule,\n        MatCardModule,\n        MatIconModule,\n        MatGridListModule,\n        MatInputModule\n    ],\n    exports: [\n        MatFormFieldModule,\n        MatCardModule,\n        MatIconModule,\n        MatGridListModule,\n        MatInputModule\n    ]\n})\nexport class MaterialModule {\n}\n","export default \"a.navbar-brand {\\n  white-space: normal;\\n  text-align: center;\\n  word-break: break-all;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n}\\n\\n@media (min-width: 768px) {\\n  html {\\n    font-size: 16px;\\n  }\\n}\\n\\n.box-shadow {\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-counter-component',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent {\n \n  public registration;\n  public httpClient;\n  public bUrl;\n  public status;\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    this.registration = new Registration();\n    this.httpClient = http;\n    this.bUrl = baseUrl;\n  }\n\n  public register() {\n    var name = this.registration.userName;\n\n    this.httpClient.post(this.bUrl + 'registration', this.registration).subscribe(result => {\n      this.status = result;\n    }, error => console.error(error));\n  }\n}\n\n\nclass Registration {\n  userName: string;\n}\n","import {RegistrationRequestModel, RegistrationResponseModel} from './form/RegistrationRequestModel';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {environment} from '../environments/environment';\nimport {LoginRequestModel, LoginResponseModel} from './login/loginModels';\n\nexport const TOKEN_STORAGE_KEY = 'token';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    private REGISTRAtION_ROUTE = environment.apiUrl + '/api/user';\n    private LOGIN_ROUTE = environment.apiUrl + '/api/user/login';\n\n    constructor(private httpClient: HttpClient) {\n    }\n\n    public registerUser(model: RegistrationRequestModel): Observable<RegistrationResponseModel> {\n        return this.httpClient.post<RegistrationResponseModel>(this.REGISTRAtION_ROUTE, model,);\n    }\n\n    public async login(model: LoginRequestModel) {\n        const response = await this.httpClient.post<LoginResponseModel>(this.LOGIN_ROUTE, model)\n            .toPromise();\n        if (response && response.token) {\n            localStorage.setItem(TOKEN_STORAGE_KEY, response.token);\n        }\n    }\n\n\n    // public async SomeAction(): void {\n    //     const token = localStorage.getItem(TOKEN_STORAGE_KEY);\n    //     this.httpClient.get(this.LOGIN_ROUTE, {\n    //         headers: {\n    //             'Authorization': `bearer ${token}`\n    //         }\n    //     });\n    // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}